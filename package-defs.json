{"__opam_nix_regen":"nix run .#materialize","base":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/base/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.08.0"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"sexplib0"},{"options":[{"op":"geq","val":["2.0.0"]}],"val":"dune"},"dune-configurator"],"description":"\nFull standard library replacement for OCaml\n\nBase is a complete and portable alternative to the OCaml standard\nlibrary. It provides all standard functionalities one would expect\nfrom a language standard library. It uses consistent conventions\nacross all of its module.\n\nBase aims to be usable in any context. As a result system dependent\nfeatures such as I/O are not offered by Base. They are instead\nprovided by companion libraries such as stdio:\n\n  https://github.com/janestreet/stdio\n","dev-repo":"git+https://github.com/janestreet/base.git","doc":"https://ocaml.janestreet.com/ocaml-core/latest/doc/base/index.html","files-contents":{},"homepage":"https://github.com/janestreet/base","isLocal":false,"license":"MIT","maintainer":"Jane Street developers","name":"base","opam-version":"2.0","synopsis":"Full standard library replacement for OCaml","url":{"checksum":"sha256=e34dc0dd052a386c84f5f67e71a90720dff76e0edd01f431604404bee86ebe5a","src":"https://github.com/janestreet/base/archive/v0.14.3.tar.gz"},"version":"v0.14.3"},"base-bigarray":{"description":"\nBigarray library distributed with the OCaml compiler\n","files-contents":{},"isLocal":false,"maintainer":"https://github.com/ocaml/opam-repository/issues","name":"base-bigarray","opam-version":"2.0","version":"base"},"base-bytes":{"authors":" ","depends":[{"options":[{"op":"geq","val":["4.02.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["1.5.3"]}],"val":"ocamlfind"}],"files-contents":{},"homepage":" ","isLocal":false,"maintainer":" ","name":"base-bytes","opam-version":"2.0","synopsis":"Bytes library distributed with the OCaml compiler","version":"base"},"base-threads":{"description":"\nThreads library distributed with the OCaml compiler\n","files-contents":{},"isLocal":false,"maintainer":"https://github.com/ocaml/opam-repository/issues","name":"base-threads","opam-version":"2.0","version":"base"},"base-unix":{"description":"\nUnix library distributed with the OCaml compiler\n","files-contents":{},"isLocal":false,"maintainer":"https://github.com/ocaml/opam-repository/issues","name":"base-unix","opam-version":"2.0","version":"base"},"biniou":{"authors":["Martin Jambon"],"bug-reports":"https://github.com/mjambon/biniou/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],{"options":[{"id":"with-test"}],"val":["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]},{"options":[{"id":"with-doc"}],"val":["dune","build","-p",{"id":"name"},"@doc"]}],"depends":["easy-format",{"options":[{"op":"geq","val":["1.10"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.02.3"]}],"val":"ocaml"}],"description":"\n\nBiniou (pronounced \"be new\") is a binary data format designed for speed, safety,\nease of use and backward compatibility as protocols evolve. Biniou is vastly\nequivalent to JSON in terms of functionality but allows implementations several\ntimes faster (4 times faster than yojson), with 25-35% space savings.\n\nBiniou data can be decoded into human-readable form without knowledge of type\ndefinitions except for field and variant names which are represented by 31-bit\nhashes. A program named bdump is provided for routine visualization of biniou\ndata files.\n\nThe program atdgen is used to derive OCaml-Biniou serializers and deserializers\nfrom type definitions.\n\nBiniou format specification: mjambon.github.io/atdgen-doc/biniou-format.txt","dev-repo":"git+https://github.com/mjambon/biniou.git","doc":"https://mjambon.github.io/biniou/","files-contents":{},"homepage":"https://github.com/mjambon/biniou","isLocal":false,"license":"BSD-3-Clause","maintainer":["martin@mjambon.com"],"name":"biniou","opam-version":"2.0","synopsis":"Binary data format designed for speed, safety, ease of use and backward compatibility as protocols evolve","url":{"checksum":["sha256=35546c68b1929a8e6d27a3b39ecd17b38303a0d47e65eb9d1480c2061ea84335","sha512=82670cc77bf3e869ee26e5fbe5a5affa45a22bc8b6c4bd7e85473912780e0111baca59b34a2c14feae3543ce6e239d7fddaeab24b686a65bfe642cdb91d27ebf"],"src":"https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz"},"version":"1.2.1"},"cmdliner":{"authors":["Daniel Bünzli <daniel.buenzl i@erratique.ch>"],"bug-reports":"https://github.com/dbuenzli/cmdliner/issues","build":[[{"id":"make"},"all","PREFIX=%{prefix}%"]],"depends":[{"options":[{"op":"geq","val":["4.03.0"]}],"val":"ocaml"}],"description":"\nCmdliner allows the declarative definition of command line interfaces\nfor OCaml.\n\nIt provides a simple and compositional mechanism to convert command\nline arguments to OCaml values and pass them to your functions. The\nmodule automatically handles syntax errors, help messages and UNIX man\npage generation. It supports programs with single or multiple commands\nand respects most of the [POSIX][1] and [GNU][2] conventions.\n\nCmdliner has no dependencies and is distributed under the ISC license.\n\n[1]: http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html\n[2]: http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n","dev-repo":"git+http://erratique.ch/repos/cmdliner.git","doc":"http://erratique.ch/software/cmdliner/doc/Cmdliner","files-contents":{},"homepage":"http://erratique.ch/software/cmdliner","install":[[{"id":"make"},"install","LIBDIR=%{_:lib}%","DOCDIR=%{_:doc}%"],[{"id":"make"},"install-doc","LIBDIR=%{_:lib}%","DOCDIR=%{_:doc}%"]],"isLocal":false,"license":"ISC","maintainer":"Daniel Bünzli <daniel.buenzl i@erratique.ch>","name":"cmdliner","opam-version":"2.0","synopsis":"Declarative definition of command line interfaces for OCaml","tags":["cli","system","declarative","org:erratique"],"url":{"archive":"http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz","checksum":"fe2213d0bc63b1e10a2d0aa66d2fc8d9"},"version":"1.0.4"},"conf-gmp":{"authors":"nbraud","bug-reports":"https://github.com/ocaml/opam-repository/issues","build":[{"options":[{"op":"and","val":[{"op":"neq","val":[{"id":"os"},"macos"]},{"op":"neq","val":[{"id":"os"},"win32"]}]}],"val":["sh","-exc","cc -c $CFLAGS -I/usr/local/include test.c"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os"},"win32"]},{"op":"eq","val":[{"id":"os-distribution"},"cygwinports"]}]}],"val":["sh","-exc","$(ocamlc -config-var c_compiler) -c $CFLAGS -I/usr/local/include test.c"]},{"options":[{"op":"eq","val":[{"id":"os"},"macos"]}],"val":["sh","-exc","cc -c $CFLAGS -I/opt/homebrew/include -I/opt/local/include -I/usr/local/include test.c"]}],"depexts":[{"options":[{"op":"eq","val":[{"id":"os-family"},"debian"]}],"val":["libgmp-dev"]},{"options":[{"op":"eq","val":[{"id":"os-family"},"ubuntu"]}],"val":["libgmp-dev"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os"},"macos"]},{"op":"eq","val":[{"id":"os-distribution"},"homebrew"]}]}],"val":["gmp"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os-distribution"},"macports"]},{"op":"eq","val":[{"id":"os"},"macos"]}]}],"val":["gmp"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"centos"]}],"val":["gmp","gmp-devel"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"fedora"]}],"val":["gmp","gmp-devel"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"ol"]}],"val":["gmp","gmp-devel"]},{"options":[{"op":"eq","val":[{"id":"os"},"openbsd"]}],"val":["gmp"]},{"options":[{"op":"eq","val":[{"id":"os"},"freebsd"]}],"val":["gmp"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"alpine"]}],"val":["gmp-dev"]},{"options":[{"op":"eq","val":[{"id":"os-family"},"suse"]}],"val":["gmp-devel"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os"},"win32"]},{"op":"eq","val":[{"id":"os-distribution"},"cygwinports"]}]}],"val":["mingw64-x86_64-gmp"]}],"description":"This package can only install if the GMP lib is installed on the system.","extra-files":["test.c","md5=2fd2970c293c36222a6d299ec155823f"],"files-contents":{"test.c":"#include <gmp.h>\n#ifndef __GMP_H__\n#error \"No GMP header\"\n#endif\n\nvoid test(void) {\n  mpz_t n;\n  mpz_init(n);\n  mpz_clear(n);\n}\n"},"flags":{"id":"conf"},"homepage":"http://gmplib.org/","isLocal":false,"license":"GPL-1.0-or-later","maintainer":"nbraud","name":"conf-gmp","opam-version":"2.0","synopsis":"Virtual package relying on a GMP lib system installation","version":"4"},"conf-python-3":{"authors":"Python Software Foundation","bug-reports":"https://github.com/ocaml/opam-repository/issues","build":["python3","test.py"],"depexts":[{"options":[{"op":"eq","val":[{"id":"os-family"},"debian"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"nixos"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"alpine"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"centos"]}],"val":["python36","epel-release"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"fedora"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"ol"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"arch"]}],"val":["python"]},{"options":[{"op":"eq","val":[{"id":"os-family"},"suse"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"gentoo"]}],"val":["dev-lang/python:3.6"]},{"options":[{"op":"eq","val":[{"id":"os"},"openbsd"]}],"val":["python3"]},{"options":[{"op":"eq","val":[{"id":"os"},"netbsd"]}],"val":["lang/python36"]},{"options":[{"op":"eq","val":[{"id":"os"},"freebsd"]}],"val":["lang/python36"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os-distribution"},"macports"]},{"op":"eq","val":[{"id":"os"},"macos"]}]}],"val":["python36"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os-distribution"},"homebrew"]},{"op":"eq","val":[{"id":"os"},"macos"]}]}],"val":["python@3"]},{"options":[{"op":"eq","val":[{"id":"os-distribution"},"cygwinports"]}],"val":["system:python3"]}],"description":"\nThis package can only install if a Python-3 interpreter is available\non the system.\nIf a minor version needs to be specified for your operating system, then\npython-3.6 will be used.\n","extra-files":["test.py","md5=db8829ab1f4aa1fc15f380afba9d01f5"],"files-contents":{"test.py":"print('python-3 OK')\n"},"flags":{"id":"conf"},"homepage":"https://www.python.org/download/releases/3.6","isLocal":false,"license":"PSF","maintainer":"unixjunkie@sdf.org","name":"conf-python-3","opam-version":"2.0","synopsis":"Virtual package relying on Python-3 installation","version":"1.0.0"},"coq":{"authors":["The Coq development team, INRIA, CNRS, and contributors"],"bug-reports":"https://github.com/coq/coq/issues","build":[{"options":[{"id":"pinned"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.5"]}],"val":"dune"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"coq-core"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"coq-stdlib"}],"description":"\nCoq is a formal proof management system. It provides\na formal language to write mathematical definitions, executable\nalgorithms and theorems together with an environment for\nsemi-interactive development of machine-checked proofs.\n\nTypical applications include the certification of properties of\nprogramming languages (e.g. the CompCert compiler certification\nproject, or the Bedrock verified low-level programming library), the\nformalization of mathematics (e.g. the full formalization of the\nFeit-Thompson theorem or homotopy type theory) and teaching.","dev-repo":"git+https://github.com/coq/coq.git","doc":"https://coq.github.io/doc/","files-contents":{},"homepage":"https://coq.inria.fr/","isLocal":true,"license":"LGPL-2.1-only","maintainer":["The Coq development team <coqdev@inria.fr>"],"name":"coq","opam-version":"2.0","synopsis":"The Coq Proof Assistant","version":"dev"},"coq-core":{"authors":["The Coq development team, INRIA, CNRS, and contributors"],"bug-reports":"https://github.com/coq/coq/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"build-env":[[{"op":"eq","val":[{"id":"COQ_CONFIGURE_PREFIX"},"%{prefix}"]}]],"depends":[{"options":[{"op":"geq","val":["2.5"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.05.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["1.8.1"]}],"val":"ocamlfind"},{"options":[{"op":"geq","val":["1.10"]}],"val":"zarith"},{"options":[{"id":"with-test"}],"val":"ounit2"}],"description":"\nCoq is a formal proof management system. It provides\na formal language to write mathematical definitions, executable\nalgorithms and theorems together with an environment for\nsemi-interactive development of machine-checked proofs.\n\nTypical applications include the certification of properties of\nprogramming languages (e.g. the CompCert compiler certification\nproject, or the Bedrock verified low-level programming library), the\nformalization of mathematics (e.g. the full formalization of the\nFeit-Thompson theorem or homotopy type theory) and teaching.\n\nThis package includes the Coq core binaries, plugins, and tools, but\nnot the vernacular standard library.\n\nNote that in this setup, Coq needs to be started with the -boot and\n-noinit options, as will otherwise fail to find the regular Coq\nprelude, now living in the coq-stdlib package.","dev-repo":"git+https://github.com/coq/coq.git","doc":"https://coq.github.io/doc/","files-contents":{},"homepage":"https://coq.inria.fr/","isLocal":true,"license":"LGPL-2.1-only","maintainer":["The Coq development team <coqdev@inria.fr>"],"name":"coq-core","opam-version":"2.0","synopsis":"The Coq Proof Assistant -- Core Binaries and Tools","version":"dev"},"coq-doc":{"authors":["The Coq development team, INRIA, CNRS, and contributors"],"bug-reports":"https://github.com/coq/coq/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"and","val":[{"id":"build"},{"op":"geq","val":["2.5.0"]}]}],"val":"dune"},{"options":[{"id":"build"}],"val":"conf-python-3"},{"options":[{"op":"and","val":[{"id":"build"},{"op":"eq","val":[{"id":"version"}]}]}],"val":"coq"}],"description":"\nCoq is a formal proof management system. It provides\na formal language to write mathematical definitions, executable\nalgorithms and theorems together with an environment for\nsemi-interactive development of machine-checked proofs.\n\nThis package provides the Coq Reference Manual.","dev-repo":"git+https://github.com/coq/coq.git","doc":"https://coq.github.io/doc/","files-contents":{},"homepage":"https://coq.inria.fr/","isLocal":true,"license":"OPL-1.0","maintainer":["The Coq development team <coqdev@inria.fr>"],"name":"coq-doc","opam-version":"2.0","synopsis":"The Coq Proof Assistant --- Reference Manual","version":"dev"},"coq-serapi":{"authors":["Emilio Jesús Gallego Arias","Karl Palmskog","Clément Pit-Claudel","Kaiyu Yang"],"bug-reports":"https://github.com/ejgallego/coq-serapi/issues","build":["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],"depends":[{"options":[{"op":"geq","val":["4.07.0"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"op":"and","val":[{"op":"not","val":[{"id":"pinned"}]},{"op":"geq","val":["8.14+rc1"]}]},{"op":"lt","val":["8.15"]}]}],"val":"coq"},{"options":[{"op":"geq","val":["1.0.0"]}],"val":"cmdliner"},{"options":[{"op":"geq","val":["1.8.0"]}],"val":"ocamlfind"},{"options":[{"op":"geq","val":["v0.13.0"]}],"val":"sexplib"},{"options":[{"op":"geq","val":["2.0.1"]}],"val":"dune"},{"options":[{"op":"and","val":[{"id":"build"},{"op":"geq","val":["1.5-3"]}]}],"val":"ppx_import"},{"options":[{"op":"geq","val":["4.2.1"]}],"val":"ppx_deriving"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.13.0"]},{"op":"lt","val":["v0.15"]}]}],"val":"ppx_sexp_conv"},{"options":[{"op":"geq","val":["1.7.0"]}],"val":"yojson"},{"options":[{"op":"geq","val":["3.4"]}],"val":"ppx_deriving_yojson"}],"description":"\nSerAPI is a library for machine-to-machine interaction with the\nCoq proof assistant, with particular emphasis on applications in IDEs,\ncode analysis tools, and machine learning. SerAPI provides automatic\nserialization of Coq's internal OCaml datatypes from/to JSON or\nS-expressions (sexps).\n","dev-repo":"git+https://github.com/ejgallego/coq-serapi.git","doc":"https://ejgallego.github.io/coq-serapi/","files-contents":{},"homepage":"https://github.com/ejgallego/coq-serapi","isLocal":true,"license":"GPL-3.0-or-later","maintainer":"e@x80.org","name":"coq-serapi","opam-version":"2.0","synopsis":"Serialization library and protocol for machine interaction with the Coq proof assistant","version":"dev"},"coq-stdlib":{"authors":["The Coq development team, INRIA, CNRS, and contributors"],"bug-reports":"https://github.com/coq/coq/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.5"]}],"val":"dune"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"coq-core"}],"description":"\nCoq is a formal proof management system. It provides\na formal language to write mathematical definitions, executable\nalgorithms and theorems together with an environment for\nsemi-interactive development of machine-checked proofs.\n\nTypical applications include the certification of properties of\nprogramming languages (e.g. the CompCert compiler certification\nproject, or the Bedrock verified low-level programming library), the\nformalization of mathematics (e.g. the full formalization of the\nFeit-Thompson theorem or homotopy type theory) and teaching.\n\nThis package includes the Coq Standard Library, that is to say, the\nset of modules usually bound to the Coq.* namespace.","dev-repo":"git+https://github.com/coq/coq.git","doc":"https://coq.github.io/doc/","files-contents":{},"homepage":"https://coq.inria.fr/","isLocal":true,"license":"LGPL-2.1-only","maintainer":["The Coq development team <coqdev@inria.fr>"],"name":"coq-stdlib","opam-version":"2.0","synopsis":"The Coq Proof Assistant -- Standard Library","version":"dev"},"coqide":{"authors":["The Coq development team, INRIA, CNRS, and contributors"],"bug-reports":"https://github.com/coq/coq/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.5"]}],"val":"dune"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"coqide-server"}],"description":"\nCoq is a formal proof management system. It provides\na formal language to write mathematical definitions, executable\nalgorithms and theorems together with an environment for\nsemi-interactive development of machine-checked proofs.\n\nThis package provides the CoqIDE, a graphical user interface for the\ndevelopment of interactive proofs.","dev-repo":"git+https://github.com/coq/coq.git","doc":"https://coq.github.io/doc/","files-contents":{},"homepage":"https://coq.inria.fr/","isLocal":true,"license":"LGPL-2.1-only","maintainer":["The Coq development team <coqdev@inria.fr>"],"name":"coqide","opam-version":"2.0","synopsis":"The Coq Proof Assistant --- GTK3 IDE","version":"dev"},"coqide-server":{"authors":["The Coq development team, INRIA, CNRS, and contributors"],"bug-reports":"https://github.com/coq/coq/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.5"]}],"val":"dune"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"coq-core"}],"description":"\nCoq is a formal proof management system. It provides\na formal language to write mathematical definitions, executable\nalgorithms and theorems together with an environment for\nsemi-interactive development of machine-checked proofs.\n\nThis package provides the `coqidetop` language server, an\nimplementation of Coq's [XML protocol](https://github.com/coq/coq/blob/master/dev/doc/xml-protocol.md)\nwhich allows clients, such as CoqIDE, to interact with Coq in a\nstructured way.","dev-repo":"git+https://github.com/coq/coq.git","doc":"https://coq.github.io/doc/","files-contents":{},"homepage":"https://coq.inria.fr/","isLocal":true,"license":"LGPL-2.1-only","maintainer":["The Coq development team <coqdev@inria.fr>"],"name":"coqide-server","opam-version":"2.0","synopsis":"The Coq Proof Assistant, XML protocol server","version":"dev"},"cppo":{"authors":"Martin Jambon","bug-reports":"https://github.com/ocaml-community/cppo/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],{"options":[{"id":"with-test"}],"val":["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]}],"depends":[{"options":[{"op":"geq","val":["4.02.3"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["1.0"]}],"val":"dune"},"base-unix"],"description":"\nCppo is an equivalent of the C preprocessor for OCaml programs.\nIt allows the definition of simple macros and file inclusion.\n\nCppo is:\n\n* more OCaml-friendly than cpp\n* easy to learn without consulting a manual\n* reasonably fast\n* simple to install and to maintain\n","dev-repo":"git+https://github.com/ocaml-community/cppo.git","doc":"https://ocaml-community.github.io/cppo/","files-contents":{},"homepage":"https://github.com/ocaml-community/cppo","isLocal":false,"license":"BSD-3-Clause","maintainer":"martin@mjambon.com","name":"cppo","opam-version":"2.0","synopsis":"Code preprocessor like cpp for OCaml","url":{"checksum":["md5=fed401197d86f9089e89f6cbdf1d660d","sha512=069bbe0ef09c03b0dc4b5795f909c3ef872fe99c6f1e6704a0fa97594b1570b3579226ec67fe11d696ccc349a4585055bbaf07c65eff423aa45af28abf38c858"],"src":"https://github.com/ocaml-community/cppo/archive/v1.6.8.tar.gz"},"version":"1.6.8"},"csexp":{"authors":["Quentin Hocquet <mefyl@gruntech.org>","Jane Street Group, LLC","Jeremie Dimino <jeremie@dimino.org>"],"bug-reports":"https://github.com/ocaml-dune/csexp/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["1.11"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.03.0"]}],"val":"ocaml"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"description":"\n\nThis library provides minimal support for Canonical S-expressions\n[1]. Canonical S-expressions are a binary encoding of S-expressions\nthat is super simple and well suited for communication between\nprograms.\n\nThis library only provides a few helpers for simple applications. If\nyou need more advanced support, such as parsing from more fancy input\nsources, you should consider copying the code of this library given\nhow simple parsing S-expressions in canonical form is.\n\nTo avoid a dependency on a particular S-expression library, the only\nmodule of this library is parameterised by the type of S-expressions.\n\n[1] https://en.wikipedia.org/wiki/Canonical_S-expressions\n","dev-repo":"git+https://github.com/ocaml-dune/csexp.git","doc":"https://ocaml-dune.github.io/csexp/","files-contents":{},"homepage":"https://github.com/ocaml-dune/csexp","isLocal":false,"license":"MIT","maintainer":["Jeremie Dimino <jeremie@dimino.org>"],"name":"csexp","opam-version":"2.0","synopsis":"Parsing and printing of S-expressions in Canonical form","url":{"checksum":["sha256=d605e4065fa90a58800440ef2f33a2d931398bf2c22061a8acb7df845c0aac02","sha512=d785bbabaff9f6bf601399149ef0a42e5e99647b54e27f97ef1625907793dda22a45bf83e0e8a1eba2c63634c5484b54739ff0904ef556f5fc592efa38af7505"],"src":"https://github.com/ocaml-dune/csexp/releases/download/1.5.1/csexp-1.5.1.tbz"},"version":"1.5.1","x-commit-hash":"7eeb86206819d2b1782d6cde1be9d6cf8b5fc851"},"dune":{"authors":["Jane Street Group, LLC <opensource@janestreet.com>"],"bug-reports":"https://github.com/ocaml/dune/issues","build":[{"options":[{"op":"lt","val":[{"id":"opam-version"},"2"]}],"val":["ocaml","configure.ml","--libdir",{"id":"lib"}]},["ocaml","bootstrap.ml","-j",{"id":"jobs"}],["./dune.exe","build","-p",{"id":"name"},"--profile","dune-bootstrap","-j",{"id":"jobs"}]],"conflicts":[{"options":[{"op":"lt","val":["3.4.0"]}],"val":"merlin"},{"options":[{"op":"lt","val":["1.3.0"]}],"val":"ocaml-lsp-server"},{"options":[{"op":"lt","val":["2.3.0"]}],"val":"dune-configurator"},{"options":[{"op":"lt","val":["1.3.0"]}],"val":"odoc"},{"options":[{"op":"lt","val":["1.3.0"]}],"val":"dune-release"},{"options":[{"op":"lt","val":["3.6.0"]}],"val":"js_of_ocaml-compiler"},{"options":[{"op":"eq","val":["transition"]}],"val":"jbuilder"}],"depends":[[{"op":"or","val":[{"options":[{"op":"geq","val":["4.08"]}],"val":"ocaml"},[{"op":"and","val":[{"options":[{"op":"and","val":[{"op":"geq","val":["4.03"]},{"op":"lt","val":["4.08~~"]}]}],"val":"ocaml"},"ocamlfind-secondary"]}]]}],"base-unix","base-threads"],"description":"\n\ndune is a build system that was designed to simplify the release of\nJane Street packages. It reads metadata from \"dune\" files following a\nvery simple s-expression syntax.\n\ndune is fast, has very low-overhead, and supports parallel builds on\nall platforms. It has no system dependencies; all you need to build\ndune or packages using dune is OCaml. You don't need make or bash\nas long as the packages themselves don't use bash explicitly.\n\ndune supports multi-package development by simply dropping multiple\nrepositories into the same directory.\n\nIt also supports multi-context builds, such as building against\nseveral opam roots/switches simultaneously. This helps maintaining\npackages across several versions of OCaml and gives cross-compilation\nfor free.\n","dev-repo":"git+https://github.com/ocaml/dune.git","doc":"https://dune.readthedocs.io/","files-contents":{},"homepage":"https://github.com/ocaml/dune","isLocal":false,"license":"MIT","maintainer":["Jane Street Group, LLC <opensource@janestreet.com>"],"name":"dune","opam-version":"2.0","synopsis":"Fast, portable, and opinionated build system","url":{"checksum":["sha256=b8e7cc507fb978b45f6fdc839f2b3201d2c1e611e4a8e972c8c8cfd8522e7447","sha512=e45986afdce4a1a19671206bf9818463b398ee2658ca7203a00546b9b1079cde018bc435b4846c82281960fa3ca1cdca8aab670b15a1b7cac6cafac369de7b67"],"src":"https://github.com/ocaml/dune/releases/download/2.9.2/dune-site-2.9.2.tbz"},"version":"2.9.2","x-commit-hash":"ee27573858f9ff7fe8e0b8bb1d785be8cabd3b23"},"dune-configurator":{"authors":["Jane Street Group, LLC <opensource@janestreet.com>"],"bug-reports":"https://github.com/ocaml/dune/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.9"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.03.0"]}],"val":"ocaml"},"result",{"options":[{"op":"geq","val":["1.3.0"]}],"val":"csexp"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"description":"\ndune-configurator is a small library that helps writing OCaml scripts that\ntest features available on the system, in order to generate config.h\nfiles for instance.\nAmong other things, dune-configurator allows one to:\n- test if a C program compiles\n- query pkg-config\n- import #define from OCaml header files\n- generate config.h file\n","dev-repo":"git+https://github.com/ocaml/dune.git","doc":"https://dune.readthedocs.io/","files-contents":{},"homepage":"https://github.com/ocaml/dune","isLocal":false,"license":"MIT","maintainer":["Jane Street Group, LLC <opensource@janestreet.com>"],"name":"dune-configurator","opam-version":"2.0","synopsis":"Helper library for gathering system configuration","url":{"checksum":["sha256=b374feb22b34099ccc6dd32128e18d088ff9a81837952b29f05110b308c09f26","sha512=fce1aa520db785c25ded75a959e9dafeb7887d4f5deeb14b044cd5b9e2d235dca24589d794d2f01513765bc4764cf72f8659bd15f3a4fc06efa61363dc5d709b"],"src":"https://github.com/ocaml/dune/releases/download/2.9.1/dune-2.9.1.tbz"},"version":"2.9.1","x-commit-hash":"e41c66259135d6d1d72b031be6684bf8826a2586"},"easy-format":{"authors":["Martin Jambon"],"bug-reports":"https://github.com/mjambon/easy-format/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],{"options":[{"id":"with-test"}],"val":["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]},{"options":[{"id":"with-doc"}],"val":["dune","build","-p",{"id":"name"},"@doc"]}],"depends":[{"options":[{"op":"geq","val":["1.10"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.02.3"]}],"val":"ocaml"}],"description":"\n\nThis module offers a high-level and functional interface to the Format module of\nthe OCaml standard library. It is a pretty-printing facility, i.e. it takes as\ninput some code represented as a tree and formats this code into the most\nvisually satisfying result, breaking and indenting lines of code where\nappropriate.\n\nInput data must be first modelled and converted into a tree using 3 kinds of\nnodes:\n\n* atoms\n* lists\n* labelled nodes\n\nAtoms represent any text that is guaranteed to be printed as-is. Lists can model\nany sequence of items such as arrays of data or lists of definitions that are\nlabelled with something like \"int main\", \"let x =\" or \"x:\".","dev-repo":"git+https://github.com/mjambon/easy-format.git","doc":"https://mjambon.github.io/easy-format/","files-contents":{},"homepage":"https://github.com/mjambon/easy-format","isLocal":false,"license":"BSD-3-Clause","maintainer":["martin@mjambon.com","rudi.grinberg@gmail.com"],"name":"easy-format","opam-version":"2.0","synopsis":"High-level and functional interface to the Format module of the OCaml standard library","url":{"checksum":["sha256=3440c2b882d537ae5e9011eb06abb53f5667e651ea4bb3b460ea8230fa8c1926","sha512=e39377a2ff020ceb9ac29e8515a89d9bdbc91dfcfa871c4e3baafa56753fac2896768e5d9822a050dc1e2ade43c8967afb69391a386c0a8ecd4e1f774e236135"],"src":"https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz"},"version":"1.3.2"},"js_of_ocaml":{"authors":["Ocsigen team <dev@ocsigen.org>"],"bug-reports":"https://github.com/ocsigen/js_of_ocaml/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.8"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.04"]}],"val":"ocaml"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"js_of_ocaml-compiler"},{"options":[{"op":"geq","val":["0.15"]}],"val":"ppxlib"},"uchar",{"options":[{"id":"with-test"}],"val":"num"},{"options":[{"id":"with-test"}],"val":"ppx_expect"},{"options":[{"op":"and","val":[{"op":"geq","val":["1.9.0"]},{"id":"with-test"}]}],"val":"re"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"description":"Js_of_ocaml is a compiler from OCaml bytecode to JavaScript. It makes it possible to run pure OCaml programs in JavaScript environment like browsers and Node.js","dev-repo":"git+https://github.com/ocsigen/js_of_ocaml.git","doc":"https://ocsigen.github.io/js_of_ocaml","files-contents":{},"homepage":"https://ocsigen.github.io/js_of_ocaml","isLocal":false,"license":"GPL-2.0-or-later AND LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception","maintainer":["Ocsigen team <dev@ocsigen.org>"],"name":"js_of_ocaml","opam-version":"2.0","synopsis":"Compiler from OCaml bytecode to JavaScript","url":{"checksum":["sha256=158dafe7271ac79157981d1c3f5f177ec78a0099c38f861ae14e7ac06bd29c3a","sha512=d83f0988aa1089fa01a0a693d7e6a832018c5a8ce707f44685809769377ef7ef59ce48229b1612966bd9166b610d66ddff8f2606f6c3f09c49f601b74842fde1"],"src":"https://github.com/ocsigen/js_of_ocaml/releases/download/3.11.0/js_of_ocaml-3.11.0.tbz"},"version":"3.11.0","x-commit-hash":"4572278dea9cc8a7d44d65b440004a2ec3bce7a7"},"js_of_ocaml-compiler":{"authors":["Ocsigen team <dev@ocsigen.org>"],"bug-reports":"https://github.com/ocsigen/js_of_ocaml/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-doc"}],"val":"@doc"}]],"conflicts":[{"options":[{"op":"lt","val":["1.5.1"]}],"val":"ocamlfind"},{"options":[{"op":"lt","val":["3.0"]}],"val":"js_of_ocaml"},"base-domains"],"depends":[{"options":[{"op":"geq","val":["2.8"]}],"val":"dune"},{"options":[{"op":"and","val":[{"op":"geq","val":["4.04"]},{"op":"lt","val":["4.14"]}]}],"val":"ocaml"},{"options":[{"id":"with-test"}],"val":"num"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.12.0"]},{"id":"with-test"}]}],"val":"ppx_expect"},{"options":[{"op":"geq","val":["0.15.0"]}],"val":"ppxlib"},{"options":[{"id":"with-test"}],"val":"re"},"cmdliner",{"options":[{"op":"lt","val":["20211215"]}],"val":"menhir"},"menhirLib","menhirSdk","yojson",{"options":[{"id":"with-doc"}],"val":"odoc"}],"depopts":["ocamlfind"],"description":"Js_of_ocaml is a compiler from OCaml bytecode to JavaScript. It makes it possible to run pure OCaml programs in JavaScript environment like browsers and Node.js","dev-repo":"git+https://github.com/ocsigen/js_of_ocaml.git","doc":"https://ocsigen.github.io/js_of_ocaml","files-contents":{},"homepage":"https://ocsigen.github.io/js_of_ocaml","isLocal":false,"license":"GPL-2.0-or-later AND LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception","maintainer":["Ocsigen team <dev@ocsigen.org>"],"name":"js_of_ocaml-compiler","opam-version":"2.0","synopsis":"Compiler from OCaml bytecode to JavaScript","url":{"checksum":["sha256=158dafe7271ac79157981d1c3f5f177ec78a0099c38f861ae14e7ac06bd29c3a","sha512=d83f0988aa1089fa01a0a693d7e6a832018c5a8ce707f44685809769377ef7ef59ce48229b1612966bd9166b610d66ddff8f2606f6c3f09c49f601b74842fde1"],"src":"https://github.com/ocsigen/js_of_ocaml/releases/download/3.11.0/js_of_ocaml-3.11.0.tbz"},"version":"3.11.0","x-commit-hash":"4572278dea9cc8a7d44d65b440004a2ec3bce7a7"},"js_of_ocaml-lwt":{"authors":["Ocsigen team <dev@ocsigen.org>"],"bug-reports":"https://github.com/ocsigen/js_of_ocaml/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.8"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.04"]}],"val":"ocaml"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"js_of_ocaml"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"js_of_ocaml-ppx"},{"options":[{"op":"geq","val":["2.4.4"]}],"val":"lwt"},{"options":[{"id":"with-test"}],"val":"num"},{"options":[{"id":"with-test"}],"val":"ppx_expect"},{"options":[{"op":"and","val":[{"op":"geq","val":["0.22.0"]},{"id":"with-test"}]}],"val":"ppxlib"},{"options":[{"op":"and","val":[{"op":"geq","val":["1.9.0"]},{"id":"with-test"}]}],"val":"re"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"depopts":["graphics","lwt_log"],"description":"Js_of_ocaml is a compiler from OCaml bytecode to JavaScript. It makes it possible to run pure OCaml programs in JavaScript environment like browsers and Node.js","dev-repo":"git+https://github.com/ocsigen/js_of_ocaml.git","doc":"https://ocsigen.github.io/js_of_ocaml","files-contents":{},"homepage":"https://ocsigen.github.io/js_of_ocaml","isLocal":false,"license":"GPL-2.0-or-later AND LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception","maintainer":["Ocsigen team <dev@ocsigen.org>"],"name":"js_of_ocaml-lwt","opam-version":"2.0","synopsis":"Compiler from OCaml bytecode to JavaScript","url":{"checksum":["sha256=158dafe7271ac79157981d1c3f5f177ec78a0099c38f861ae14e7ac06bd29c3a","sha512=d83f0988aa1089fa01a0a693d7e6a832018c5a8ce707f44685809769377ef7ef59ce48229b1612966bd9166b610d66ddff8f2606f6c3f09c49f601b74842fde1"],"src":"https://github.com/ocsigen/js_of_ocaml/releases/download/3.11.0/js_of_ocaml-3.11.0.tbz"},"version":"3.11.0","x-commit-hash":"4572278dea9cc8a7d44d65b440004a2ec3bce7a7"},"js_of_ocaml-ppx":{"authors":["Ocsigen team <dev@ocsigen.org>"],"bug-reports":"https://github.com/ocsigen/js_of_ocaml/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.8"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.04"]}],"val":"ocaml"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"js_of_ocaml"},{"options":[{"op":"geq","val":["0.15.0"]}],"val":"ppxlib"},{"options":[{"id":"with-test"}],"val":"num"},{"options":[{"id":"with-test"}],"val":"ppx_expect"},{"options":[{"op":"and","val":[{"op":"geq","val":["1.9.0"]},{"id":"with-test"}]}],"val":"re"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"description":"Js_of_ocaml is a compiler from OCaml bytecode to JavaScript. It makes it possible to run pure OCaml programs in JavaScript environment like browsers and Node.js","dev-repo":"git+https://github.com/ocsigen/js_of_ocaml.git","doc":"https://ocsigen.github.io/js_of_ocaml","files-contents":{},"homepage":"https://ocsigen.github.io/js_of_ocaml","isLocal":false,"license":"GPL-2.0-or-later AND LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception","maintainer":["Ocsigen team <dev@ocsigen.org>"],"name":"js_of_ocaml-ppx","opam-version":"2.0","synopsis":"Compiler from OCaml bytecode to JavaScript","url":{"checksum":["sha256=158dafe7271ac79157981d1c3f5f177ec78a0099c38f861ae14e7ac06bd29c3a","sha512=d83f0988aa1089fa01a0a693d7e6a832018c5a8ce707f44685809769377ef7ef59ce48229b1612966bd9166b610d66ddff8f2606f6c3f09c49f601b74842fde1"],"src":"https://github.com/ocsigen/js_of_ocaml/releases/download/3.11.0/js_of_ocaml-3.11.0.tbz"},"version":"3.11.0","x-commit-hash":"4572278dea9cc8a7d44d65b440004a2ec3bce7a7"},"jscoq":{"authors":"Emilio Jesús Gallego Arias, Shachar Itzhaky, Benoît Pin","bug-reports":"https://github.com/jscoq/jscoq/issues","build":["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],"depends":[{"options":[{"op":"geq","val":["4.12.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["2.8.0"]}],"val":"dune"},{"options":[{"op":"and","val":[{"op":"geq","val":["3.11.0"]},{"op":"lt","val":["4"]}]}],"val":"js_of_ocaml"},{"options":[{"op":"and","val":[{"op":"geq","val":["3.11.0"]},{"op":"lt","val":["4"]}]}],"val":"js_of_ocaml-ppx"},{"options":[{"op":"and","val":[{"op":"geq","val":["3.11.0"]},{"op":"lt","val":["4"]}]}],"val":"js_of_ocaml-lwt"},{"options":[{"op":"geq","val":["1.7.0"]}],"val":"yojson"},{"options":[{"op":"geq","val":["3.5.3"]}],"val":"ppx_deriving_yojson"},{"options":[{"op":"geq","val":["1.8.0"]}],"val":"ppx_import"},{"options":[{"op":"geq","val":["2.0.1"]}],"val":"lwt_ppx"},{"options":[{"op":"geq","val":["v0.14.0"]}],"val":"sexplib"},{"options":[{"op":"geq","val":["v0.14.1"]}],"val":"ppx_sexp_conv"},{"options":[{"op":"geq","val":["1.11"]}],"val":"zarith"},{"options":[{"op":"geq","val":["v0.14.0"]}],"val":"zarith_stubs_js"}],"description":"A port of Coq to JavaScript -- run Coq in your browser","dev-repo":"git+https://github.com/jscoq/jscoq.git","doc":"https://github.com/jscoq/jscoq#readme","files-contents":{},"homepage":"https://github.com/jscoq/jscoq","isLocal":true,"license":"AGPL-3.0-or-later","maintainer":"e@x80.org","name":"jscoq","opam-version":"2.0","synopsis":"The jsCoq Interactive Proof System","version":"dev"},"lwt":{"authors":["Jérôme Vouillon","Jérémie Dimino"],"bug-reports":"https://github.com/ocsigen/lwt/issues","build":[["dune","exec","-p",{"id":"name"},"src/unix/config/discover.exe","--","--save","--use-libev","%{conf-libev:installed}%"],["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"conflicts":[{"options":[{"op":"eq","val":["4.02.1+BER"]}],"val":"ocaml-variants"}],"depends":[{"options":[{"op":"and","val":[{"id":"build"},{"op":"geq","val":["1.1.0"]}]}],"val":"cppo"},{"options":[{"op":"geq","val":["1.8.0"]}],"val":"dune"},"dune-configurator",{"options":[{"op":"and","val":[{"op":"geq","val":["1.1.0"]},{"op":"neq","val":["os","win32"]}]}],"val":"mmap"},{"options":[{"op":"or","val":[{"op":"and","val":[{"op":"geq","val":["4.02.0"]},{"op":"neq","val":["os","win32 "]}]},{"op":"geq","val":["4.06.0"]}]}],"val":"ocaml"},[{"op":"or","val":[{"options":[{"op":"geq","val":["4.08.0"]}],"val":"ocaml"},"ocaml-syntax-shims"]}],"ocplib-endian",{"options":[{"op":"neq","val":[{"id":"os"},"win32"]}],"val":"result"},"seq",{"options":[{"op":"and","val":[{"id":"dev"},{"op":"geq","val":["1.7.3-1"]}]}],"val":"ocamlfind"}],"depopts":["base-threads","base-unix","conf-libev"],"description":"A promise is a value that may become determined in the future.\n\nLwt provides typed, composable promises. Promises that are resolved by I/O are\nresolved by Lwt in parallel.\n\nMeanwhile, OCaml code, including code creating and waiting on promises, runs in\na single thread by default. This reduces the need for locks or other\nsynchronization primitives. Code can be run in parallel on an opt-in basis.","dev-repo":"git+https://github.com/ocsigen/lwt.git","doc":"https://ocsigen.org/lwt","files-contents":{},"homepage":"https://github.com/ocsigen/lwt","isLocal":false,"license":"MIT","maintainer":["Raphaël Proust <code@bnwr.net>","Anton Bachin <antonbachin@yahoo.com>"],"name":"lwt","opam-version":"2.0","synopsis":"Promises and event-driven I/O","url":{"checksum":["md5=94272fac89c5bf21a89c102b8a8f35a5","sha512=8951b94555e930634375816d71815b9d85daad6ffb7dab24864661504d11be26575ab0b237196c54693efa372a9b69cdc1d5068a20a250dc0bbb4a3c03c5fda1"],"src":"https://github.com/ocsigen/lwt/archive/refs/tags/5.5.0.tar.gz"},"version":"5.5.0"},"lwt_ppx":{"authors":["Gabriel Radanne"],"bug-reports":"https://github.com/ocsigen/lwt/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["1.8.0"]}],"val":"dune"},"lwt",{"options":[{"op":"geq","val":["4.02.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["0.16.0"]}],"val":"ppxlib"}],"dev-repo":"git+https://github.com/ocsigen/lwt.git","doc":"https://ocsigen.org/lwt/dev/api/Ppx_lwt","files-contents":{},"homepage":"https://github.com/ocsigen/lwt","isLocal":false,"license":"MIT","maintainer":["Anton Bachin <antonbachin@yahoo.com>"],"name":"lwt_ppx","opam-version":"2.0","synopsis":"PPX syntax for Lwt, providing something similar to async/await from JavaScript","url":{"checksum":["md5=94272fac89c5bf21a89c102b8a8f35a5","sha512=8951b94555e930634375816d71815b9d85daad6ffb7dab24864661504d11be26575ab0b237196c54693efa372a9b69cdc1d5068a20a250dc0bbb4a3c03c5fda1"],"src":"https://github.com/ocsigen/lwt/archive/refs/tags/5.5.0.tar.gz"},"version":"2.0.3"},"menhir":{"authors":["François Pottier <francois.pottier@inria.fr>","Yann Régis-Gianas <yrg@pps.univ-paris-diderot.fr>"],"bug-reports":"https://gitlab.inria.fr/fpottier/menhir/-/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"and","val":[{"op":"geq","val":["4.03.0"]},{"op":"lt","val":["5.00"]}]}],"val":"ocaml"},{"options":[{"op":"geq","val":["2.8.0"]}],"val":"dune"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"menhirLib"},{"options":[{"op":"eq","val":[{"id":"version"}]}],"val":"menhirSdk"}],"dev-repo":"git+https://gitlab.inria.fr/fpottier/menhir.git","files-contents":{},"homepage":"http://gitlab.inria.fr/fpottier/menhir","isLocal":false,"license":"LGPL-2.0-only with OCaml-LGPL-linking-exception","maintainer":"francois.pottier@inria.fr","name":"menhir","opam-version":"2.0","synopsis":"An LR(1) parser generator","url":{"checksum":["md5=015354590ebce7911b073beae57e7731","sha512=76f998c114a29b390f05e7b62e396d6957e748be3bb7fe918893ab3471a7a907764de4610e392916553113df0c6b09aa570425dcf86c6a3e9e17b0ae36f3fe2b"],"src":"https://gitlab.inria.fr/fpottier/menhir/-/archive/20211128/archive.tar.gz"},"version":"20211128"},"menhirLib":{"authors":["François Pottier <francois.pottier@inria.fr>","Yann Régis-Gianas <yrg@pps.univ-paris-diderot.fr>"],"bug-reports":"https://gitlab.inria.fr/fpottier/menhir/-/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"conflicts":[{"options":[{"op":"neq","val":[{"id":"version"}]}],"val":"menhir"}],"depends":[{"options":[{"op":"geq","val":["4.03.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["2.8.0"]}],"val":"dune"}],"dev-repo":"git+https://gitlab.inria.fr/fpottier/menhir.git","files-contents":{},"homepage":"http://gitlab.inria.fr/fpottier/menhir","isLocal":false,"license":"LGPL-2.0-only with OCaml-LGPL-linking-exception","maintainer":"francois.pottier@inria.fr","name":"menhirLib","opam-version":"2.0","synopsis":"Runtime support library for parsers generated by Menhir","url":{"checksum":["md5=015354590ebce7911b073beae57e7731","sha512=76f998c114a29b390f05e7b62e396d6957e748be3bb7fe918893ab3471a7a907764de4610e392916553113df0c6b09aa570425dcf86c6a3e9e17b0ae36f3fe2b"],"src":"https://gitlab.inria.fr/fpottier/menhir/-/archive/20211128/archive.tar.gz"},"version":"20211128"},"menhirSdk":{"authors":["François Pottier <francois.pottier@inria.fr>","Yann Régis-Gianas <yrg@pps.univ-paris-diderot.fr>"],"bug-reports":"https://gitlab.inria.fr/fpottier/menhir/-/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"conflicts":[{"options":[{"op":"neq","val":[{"id":"version"}]}],"val":"menhir"}],"depends":[{"options":[{"op":"geq","val":["4.03.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["2.8.0"]}],"val":"dune"}],"dev-repo":"git+https://gitlab.inria.fr/fpottier/menhir.git","files-contents":{},"homepage":"http://gitlab.inria.fr/fpottier/menhir","isLocal":false,"license":"LGPL-2.0-only with OCaml-LGPL-linking-exception","maintainer":"francois.pottier@inria.fr","name":"menhirSdk","opam-version":"2.0","synopsis":"Compile-time library for auxiliary tools related to Menhir","url":{"checksum":["md5=015354590ebce7911b073beae57e7731","sha512=76f998c114a29b390f05e7b62e396d6957e748be3bb7fe918893ab3471a7a907764de4610e392916553113df0c6b09aa570425dcf86c6a3e9e17b0ae36f3fe2b"],"src":"https://gitlab.inria.fr/fpottier/menhir/-/archive/20211128/archive.tar.gz"},"version":"20211128"},"mmap":{"authors":["Jérémie Dimino <jeremie@dimino.org>","Anton Bachin"],"bug-reports":"https://github.com/mirage/mmap/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":["ocaml",{"options":[{"op":"geq","val":["1.6"]}],"val":"dune"}],"description":"\nThis project provides a Mmap.map_file functions for mapping files in memory.\n","dev-repo":"git+https://github.com/mirage/mmap.git","doc":"https://mirage.github.io/mmap/","files-contents":{},"homepage":"https://github.com/mirage/mmap","isLocal":false,"license":"LGPL-2.1-only WITH OCaml-LGPL-linking-exception","maintainer":"jeremie@dimino.org","name":"mmap","opam-version":"2.0","synopsis":"File mapping functionality","url":{"checksum":"md5=8c5d5fbc537296dc525867535fb878ba","src":"https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz"},"version":"1.1.0"},"num":{"authors":["Valérie Ménissier-Morain","Pierre Weis","Xavier Leroy"],"bug-reports":"https://github.com/ocaml/num/issues","build":{"id":"make"},"conflicts":["base-num"],"depends":[{"options":[{"op":"geq","val":["4.06.0"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"id":"build"},{"op":"geq","val":["1.7.3"]}]}],"val":"ocamlfind"}],"dev-repo":"git+https://github.com/ocaml/num.git","files-contents":{},"homepage":"https://github.com/ocaml/num/","install":[{"id":"make"},{"options":[{"op":"not","val":[{"id":"ocaml:preinstalled"}]}],"val":"install"},{"options":[{"id":"ocaml:preinstalled"}],"val":"findlib-install"}],"isLocal":false,"license":"LGPL-2.1-only WITH OCaml-LGPL-linking-exception","maintainer":"Xavier Leroy <xavier.leroy@inria.fr>","name":"num","opam-version":"2.0","synopsis":"The legacy Num library for arbitrary-precision integer and rational arithmetic","url":{"checksum":["md5=cda2b727e116a0b6a9c03902cc4b2415","sha512=0cc9be8ad95704bb683b4bf6698bada1ee9a40dc05924b72adc7b969685c33eeb68ccf174cc09f6a228c48c18fe94af06f28bebc086a24973a066da620db8e6f"],"src":"https://github.com/ocaml/num/archive/v1.4.tar.gz"},"version":"1.4"},"ocaml":{"authors":["Xavier Leroy","Damien Doligez","Alain Frisch","Jacques Garrigue","Didier Rémy","Jérôme Vouillon"],"bug-reports":"https://github.com/ocaml/opam-repository/issues","build":["ocaml","%{ocaml-config:share}%/gen_ocaml_config.ml",{"id":"_:version"},{"id":"_:name"}],"build-env":{"op":"eq","val":[{"id":"CAML_LD_LIBRARY_PATH"},""]},"depends":[{"options":[{"op":"geq","val":["2"]}],"val":"ocaml-config"},{"op":"or","val":[{"op":"or","val":[{"options":[{"op":"and","val":[{"op":"geq","val":["4.12.0~"]},{"op":"lt","val":["4.12.1~"]}]}],"val":"ocaml-base-compiler"},{"options":[{"op":"and","val":[{"op":"geq","val":["4.12.0~"]},{"op":"lt","val":["4.12.1~"]}]}],"val":"ocaml-variants"}]},{"options":[{"op":"and","val":[{"op":"geq","val":["4.12.0"]},{"op":"lt","val":["4.12.1~"]}]}],"val":"ocaml-system"}]}],"description":"\nThis package requires a matching implementation of OCaml,\nand polls it to initialise specific variables like `ocaml:native-dynlink`","files-contents":{},"flags":{"id":"conf"},"homepage":"https://ocaml.org","isLocal":false,"license":"LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception","maintainer":"platform@lists.ocaml.org","name":"ocaml","opam-version":"2.0","setenv":[[{"op":"eq","val":[{"id":"CAML_LD_LIBRARY_PATH"},"%{_:stubsdir}%"]}],[{"op":"prepend","val":[{"id":"CAML_LD_LIBRARY_PATH"},"%{lib}%/stublibs"]}],[{"op":"eq","val":[{"id":"OCAML_TOPLEVEL_PATH"},"%{toplevel}%"]}]],"synopsis":"The OCaml compiler (virtual package)","version":"4.12.0"},"ocaml-compiler-libs":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/ocaml-compiler-libs/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"depends":[{"options":[{"op":"geq","val":["2.8"]}],"val":"dune"},{"options":[{"op":"geq","val":["4.04.1"]}],"val":"ocaml"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"description":"\nThis packages exposes the OCaml compiler libraries repackages under\nthe toplevel names Ocaml_common, Ocaml_bytecomp, Ocaml_optcomp, ...","dev-repo":"git+https://github.com/janestreet/ocaml-compiler-libs.git","files-contents":{},"homepage":"https://github.com/janestreet/ocaml-compiler-libs","isLocal":false,"license":"MIT","maintainer":["Jane Street developers"],"name":"ocaml-compiler-libs","opam-version":"2.0","synopsis":"OCaml compiler libraries repackaged","url":{"checksum":["sha256=4ec9c9ec35cc45c18c7a143761154ef1d7663036a29297f80381f47981a07760","sha512=978dba8dfa61f98fa24fda7a9c26c2e837081f37d1685fe636dc19cfc3278a940cf01a10293504b185c406706bc1008bc54313d50f023bcdea6d5ac6c0788b35"],"src":"https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.4/ocaml-compiler-libs-v0.12.4.tbz"},"version":"v0.12.4","x-commit-hash":"8cd12f18bb7171c2b67d661868c4271fae528d93"},"ocaml-config":{"authors":["Louis Gesbert <louis.gesbert@ocamlpro.com>","David Allsopp <david.allsopp@metastack.com>"],"bug-reports":"https://github.com/ocaml/opam/issues","depends":[{"op":"or","val":[{"op":"or","val":[{"options":[{"op":"geq","val":["4.12.0~"]}],"val":"ocaml-base-compiler"},{"options":[{"op":"geq","val":["4.12.0~"]}],"val":"ocaml-variants"}]},{"options":[{"op":"geq","val":["4.12.0~"]}],"val":"ocaml-system"}]}],"description":"\nThis package is used by the OCaml package to set-up its variables.","extra-files":[["gen_ocaml_config.ml.in","md5=a4b41e3236593d8271295b84b0969172"],["ocaml-config.install","md5=8e50c5e2517d3463b3aad649748cafd7"]],"files-contents":{"gen_ocaml_config.ml.in":"let () =\n  let ocaml_version =\n    let v = Sys.ocaml_version in\n    let l = String.length v in\n    let plus = try String.index v '+' with Not_found -> l in\n    (* Introduced in 4.11.0; used from 4.12.0 *)\n    let tilde = try String.index v '~' with Not_found -> l in\n    String.sub v 0 (min (min plus tilde) l)\n  in\n  if ocaml_version <> Sys.argv.(1) then\n    (Printf.eprintf\n       \"OCaml version mismatch: %%s, expected %s\"\n       ocaml_version Sys.argv.(1);\n     exit 1)\n  else\n  let oc = open_out (Sys.argv.(2) ^ \".config\") in\n  let exe = \".exe\" in\n  let (ocaml, suffix) =\n    let s = Sys.executable_name in\n    if Filename.check_suffix s exe then\n      (Filename.chop_suffix s exe, exe)\n    else\n      (s, \"\")\n  in\n  let ocamlc = ocaml^\"c\"^suffix in\n  let libdir =\n    if Sys.command (ocamlc^\" -where > where\") = 0 then\n      (* Must be opened in text mode for Windows *)\n      let ic = open_in \"where\" in\n      let r = input_line ic in\n      close_in ic; r\n    else\n      failwith \"Bad return from 'ocamlc -where'\"\n  in\n  let stubsdir =\n    let ic = open_in (Filename.concat libdir \"ld.conf\") in\n    let rec r acc = try r (input_line ic::acc) with End_of_file -> acc in\n    let lines = List.rev (r []) in\n    close_in ic;\n    String.concat \":\" lines\n  in\n  let p fmt = Printf.fprintf oc (fmt ^^ \"\\n\") in\n  p \"opam-version: \\\"2.0\\\"\";\n  p \"variables {\";\n  p \"  native: %%b\"\n    (Sys.file_exists (ocaml^\"opt\"^suffix));\n  p \"  native-tools: %%b\"\n    (Sys.file_exists (ocamlc^\".opt\"^suffix));\n  p \"  native-dynlink: %%b\"\n    (Sys.file_exists (Filename.concat libdir \"dynlink.cmxa\"));\n  p \"  stubsdir: %%S\"\n    stubsdir;\n  p \"  preinstalled: %{ocaml-system:installed}%\";\n  p \"  compiler: \\\"%{ocaml-system:installed?system:}%%{ocaml-base-compiler:version}%%{ocaml-variants:version}%%{ocaml-option-32bit:installed?+32bit:}%%{ocaml-option-afl:installed?+afl:}%%{ocaml-option-bytecode-only:installed?+bytecode-only:}%%{ocaml-option-default-unsafe-string:installed?+default-unsafe-string:}%%{ocaml-option-fp:installed?+fp:}%%{ocaml-option-flambda:installed?+flambda:}%%{ocaml-option-musl:installed?+musl:}%%{ocaml-option-nnp:installed?+nnp:}%%{ocaml-option-no-flat-float-array:installed?+no-flat-float-array:}%%{ocaml-option-spacetime:installed?+spacetime:}%%{ocaml-option-static:installed?+static:}%\\\"\";\n  p \"}\";\n  close_out oc\n","ocaml-config.install":"share: [\"gen_ocaml_config.ml\"]\n"},"homepage":"https://opam.ocaml.org/","isLocal":false,"maintainer":"platform@lists.ocaml.org","name":"ocaml-config","opam-version":"2.0","substs":"gen_ocaml_config.ml","synopsis":"OCaml Switch Configuration","version":"2"},"ocaml-system":{"authors":"Xavier Leroy and many contributors","available":{"op":"eq","val":[{"id":"sys-ocaml-version"},"4.12.0"]},"bug-reports":"https://github.com/ocaml/opam-repository/issues","build":["ocaml","gen_ocaml_config.ml"],"conflict-class":"ocaml-core-compiler","depends":[{"options":[{"id":"post"}],"val":"ocaml"},{"options":[{"id":"post"}],"val":"base-unix"},{"options":[{"id":"post"}],"val":"base-threads"},{"options":[{"id":"post"}],"val":"base-bigarray"}],"dev-repo":"git+https://github.com/ocaml/ocaml","extra-files":["gen_ocaml_config.ml.in","md5=093e7bec1ec95f9e4c6a313d73c5d840"],"files-contents":{"gen_ocaml_config.ml.in":"let () =\n  let exe = \".exe\" in\n  let ocamlc =\n    let (base, suffix) =\n      let s = Sys.executable_name in\n      if Filename.check_suffix s exe then\n        (Filename.chop_suffix s exe, exe)\n      else\n        (s, \"\") in\n    base ^ \"c\" ^ suffix in\n  if Sys.ocaml_version <> \"%{_:version}%\" then\n    (Printf.eprintf\n       \"ERROR: The compiler found at %%s has version %%s,\\n\\\n        and this package requires %{_:version}%.\\n\\\n        You should use e.g. 'opam switch create %{_:name}%.%%s' \\\n        instead.\"\n       ocamlc Sys.ocaml_version Sys.ocaml_version;\n     exit 1)\n  else\n  let ocamlc_digest = Digest.to_hex (Digest.file ocamlc) in\n  let libdir =\n    if Sys.command (ocamlc^\" -where > %{_:name}%.config\") = 0 then\n      let ic = open_in \"%{_:name}%.config\" in\n      let r = input_line ic in\n      close_in ic;\n      Sys.remove \"%{_:name}%.config\";\n      r\n    else\n      failwith \"Bad return from 'ocamlc -where'\"\n  in\n  let graphics = Filename.concat libdir \"graphics.cmi\" in\n  let graphics_digest =\n    if Sys.file_exists graphics then\n      Digest.to_hex (Digest.file graphics)\n    else\n      String.make 32 '0'\n  in\n  let oc = open_out \"%{_:name}%.config\" in\n  Printf.fprintf oc \"opam-version: \\\"2.0\\\"\\n\\\n                     file-depends: [ [ %%S %%S ] [ %%S %%S ] ]\\n\\\n                     variables { path: %%S }\\n\"\n    ocamlc ocamlc_digest graphics graphics_digest (Filename.dirname ocamlc);\n  close_out oc\n"},"flags":{"id":"compiler"},"homepage":"https://ocaml.org","isLocal":false,"maintainer":"platform@lists.ocaml.org","name":"ocaml-system","opam-version":"2.0","substs":"gen_ocaml_config.ml","synopsis":"The OCaml compiler (system version, from outside of opam)","version":"4.12.0"},"ocamlbuild":{"authors":["Nicolas Pouillard","Berke Durak"],"bug-reports":"https://github.com/ocaml/ocamlbuild/issues","build":[[{"id":"make"},"-f","configure.make","all","OCAMLBUILD_PREFIX=%{prefix}%","OCAMLBUILD_BINDIR=%{bin}%","OCAMLBUILD_LIBDIR=%{lib}%","OCAMLBUILD_MANDIR=%{man}%","OCAML_NATIVE=%{ocaml:native}%","OCAML_NATIVE_TOOLS=%{ocaml:native}%"],[{"id":"make"},"check-if-preinstalled","all","opam-install"]],"conflicts":["base-ocamlbuild",{"options":[{"op":"lt","val":["1.6.2"]}],"val":"ocamlfind"}],"depends":[{"options":[{"op":"geq","val":["4.03"]}],"val":"ocaml"}],"dev-repo":"git+https://github.com/ocaml/ocamlbuild.git","doc":"https://github.com/ocaml/ocamlbuild/blob/master/manual/manual.adoc","files-contents":{},"homepage":"https://github.com/ocaml/ocamlbuild/","isLocal":false,"license":"LGPL-2.1-only WITH OCaml-LGPL-linking-exception","maintainer":"Gabriel Scherer <gabriel.scherer@gmail.com>","name":"ocamlbuild","opam-version":"2.0","synopsis":"OCamlbuild is a build system with builtin rules to easily build most OCaml projects.","url":{"checksum":"sha256=87b29ce96958096c0a1a8eeafeb6268077b2d11e1bf2b3de0f5ebc9cf8d42e78","src":"https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz"},"version":"0.14.0"},"ocamlfind":{"authors":"Gerd Stolpmann <gerd@gerd-stolpmann.de>","bug-reports":"https://github.com/ocaml/ocamlfind/issues","build":[["./configure","-bindir",{"id":"bin"},"-sitelib",{"id":"lib"},"-mandir",{"id":"man"},"-config","%{lib}%/findlib.conf","-no-custom",{"options":[{"op":"and","val":[{"op":"not","val":[{"id":"ocaml:preinstalled"}]},{"op":"geq","val":[{"id":"ocaml:version"},"4.02.0"]}]}],"val":"-no-camlp4"},{"options":[{"id":"ocaml:preinstalled"}],"val":"-no-topfind"}],[{"id":"make"},"all"],{"options":[{"id":"ocaml:native"}],"val":[{"id":"make"},"opt"]}],"depends":[{"options":[{"op":"geq","val":["4.00.0"]}],"val":"ocaml"}],"depopts":["graphics"],"description":"\nFindlib is a library manager for OCaml. It provides a convention how\nto store libraries, and a file format (\"META\") to describe the\nproperties of libraries. There is also a tool (ocamlfind) for\ninterpreting the META files, so that it is very easy to use libraries\nin programs and scripts.\n","dev-repo":"git+https://github.com/ocaml/ocamlfind.git","files-contents":{},"homepage":"http://projects.camlcity.org/projects/findlib.html","install":[[{"id":"make"},"install"],{"options":[{"id":"ocaml:preinstalled"}],"val":["install","-m","0755","ocaml-stub","%{bin}%/ocaml"]}],"isLocal":false,"license":"MIT","maintainer":"Thomas Gazagnaire <thomas@gazagnaire.org>","name":"ocamlfind","opam-version":"2.0","synopsis":"A library manager for OCaml","url":{"checksum":["md5=24047dd8a0da5322253de9b7aa254e42","sha512=27cc4ce141576bf477fb9d61a82ad65f55478740eed59fb43f43edb794140829fd2ff89ad27d8a890cfc336b54c073a06de05b31100fc7c01cacbd7d88e928ea"],"src":"http://download.camlcity.org/download/findlib-1.9.3.tar.gz"},"version":"1.9.3"},"ocplib-endian":{"authors":"Pierre Chambart","bug-reports":"https://github.com/OCamlPro/ocplib-endian/issues","build":["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}],"depends":["base-bytes",{"options":[{"op":"geq","val":["4.03.0"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"op":"geq","val":["1.1.0"]},{"id":"build"}]}],"val":"cppo"},{"options":[{"op":"geq","val":["1.0"]}],"val":"dune"}],"description":"The library implements three modules:\n* [EndianString](https://github.com/OCamlPro/ocplib-endian/blob/master/src/endianString.mli) works directly on strings, and provides submodules BigEndian and LittleEndian, with their unsafe counter-parts;\n* [EndianBytes](https://github.com/OCamlPro/ocplib-endian/blob/master/src/endianBytes.mli) works directly on bytes, and provides submodules BigEndian and LittleEndian, with their unsafe counter-parts;\n* [EndianBigstring](https://github.com/OCamlPro/ocplib-endian/blob/master/src/endianBigstring.mli) works on bigstrings (Bigarrays of chars), and provides submodules BigEndian and LittleEndian, with their unsafe counter-parts.","dev-repo":"git+https://github.com/OCamlPro/ocplib-endian.git","doc":"https://ocamlpro.github.io/ocplib-endian/ocplib-endian/","files-contents":{},"homepage":"https://github.com/OCamlPro/ocplib-endian","isLocal":false,"license":"LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception","maintainer":"pierre.chambart@ocamlpro.com","name":"ocplib-endian","opam-version":"2.0","synopsis":"Optimised functions to read and write int16/32/64 from strings and bigarrays","url":{"checksum":["md5=8d5492eeb7c6815ade72a7415ea30949","sha512=2e70be5f3d6e377485c60664a0e235c3b9b24a8d6b6a03895d092c6e40d53810bfe1f292ee69e5181ce6daa8a582bfe3d59f3af889f417134f658812be5b8b85"],"src":"https://github.com/OCamlPro/ocplib-endian/archive/refs/tags/1.2.tar.gz"},"version":"1.2"},"parsexp":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/parsexp/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.04.2"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"base"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"sexplib0"},{"options":[{"op":"geq","val":["2.0.0"]}],"val":"dune"}],"description":"\nThis library provides generic parsers for parsing S-expressions from\nstrings or other medium.\n\nThe library is focused on performances but still provide full generic\nparsers that can be used with strings, bigstrings, lexing buffers,\ncharacter streams or any other sources effortlessly.\n\nIt provides three different class of parsers:\n- the normal parsers, producing [Sexp.t] or [Sexp.t list] values\n- the parsers with positions, building compact position sequences so\n  that one can recover original positions in order to report properly\n  located errors at little cost\n- the Concrete Syntax Tree parsers, produce values of type\n  [Parsexp.Cst.t] which record the concrete layout of the s-expression\n  syntax, including comments\n\nThis library is portable and doesn't provide IO functions. To read\ns-expressions from files or other external sources, you should use\nparsexp_io.\n","dev-repo":"git+https://github.com/janestreet/parsexp.git","doc":"https://ocaml.janestreet.com/ocaml-core/latest/doc/parsexp/index.html","files-contents":{},"homepage":"https://github.com/janestreet/parsexp","isLocal":false,"license":"MIT","maintainer":"Jane Street developers","name":"parsexp","opam-version":"2.0","synopsis":"S-expression parsing library","url":{"checksum":"sha256=f6e17e4e08dcdce08a6372485a381dcdb3fda0f71b4506d7be982b87b5a1f230","src":"https://github.com/janestreet/parsexp/archive/refs/tags/v0.14.2.tar.gz"},"version":"v0.14.2"},"ppx_derivers":{"authors":["Jérémie Dimino"],"bug-reports":"https://github.com/ocaml-ppx/ppx_derivers/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":["ocaml","dune"],"description":"\nPpx_derivers is a tiny package whose sole purpose is to allow\nppx_deriving and ppx_type_conv to inter-operate gracefully when linked\nas part of the same ocaml-migrate-parsetree driver.","dev-repo":"git+https://github.com/ocaml-ppx/ppx_derivers.git","files-contents":{},"homepage":"https://github.com/ocaml-ppx/ppx_derivers","isLocal":false,"license":"BSD-3-Clause","maintainer":"jeremie@dimino.org","name":"ppx_derivers","opam-version":"2.0","synopsis":"Shared [@@deriving] plugin registry","url":{"checksum":"md5=5dc2bf130c1db3c731fe0fffc5648b41","src":"https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz"},"version":"1.2.1"},"ppx_deriving":{"authors":["whitequark <whitequark@whitequark.org>"],"bug-reports":"https://github.com/ocaml-ppx/ppx_deriving/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],{"options":[{"id":"with-test"}],"val":["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]},{"options":[{"id":"with-doc"}],"val":["dune","build","@doc","-p",{"id":"name"},"-j",{"id":"jobs"}]}],"depends":[{"options":[{"op":"geq","val":["4.05.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["1.6.3"]}],"val":"dune"},{"options":[{"op":"and","val":[{"id":"build"},{"op":"geq","val":["1.1.0"]}]}],"val":"cppo"},"ocamlfind","ppx_derivers",{"options":[{"op":"geq","val":["0.20.0"]}],"val":"ppxlib"},"result",{"options":[{"id":"with-test"}],"val":"ounit2"}],"description":"\nppx_deriving provides common infrastructure for generating\ncode based on type definitions, and a set of useful plugins\nfor common tasks.\n","dev-repo":"git+https://github.com/ocaml-ppx/ppx_deriving.git","doc":"https://ocaml-ppx.github.io/ppx_deriving/","files-contents":{},"homepage":"https://github.com/ocaml-ppx/ppx_deriving","isLocal":false,"license":"MIT","maintainer":"whitequark <whitequark@whitequark.org>","name":"ppx_deriving","opam-version":"2.0","synopsis":"Type-driven code generation for OCaml","tags":["syntax"],"url":{"checksum":["sha256=e96b5fb25b7632570e4b329e22e097fcd4b8e8680d1e43ef003a8fbd742b0786","sha512=f28cd778a2d48ababa53f73131b25229a11b03685610d020b7b9228b1e25570891cd927b37475aeda49be72debaf5f2dda4c1518a0965db7a361c0ebe325a8d2"],"src":"https://github.com/ocaml-ppx/ppx_deriving/releases/download/v5.2.1/ppx_deriving-v5.2.1.tbz"},"version":"5.2.1","x-commit-hash":"7211546d6527bf57d3eff8174c90fc3c22250dae"},"ppx_deriving_yojson":{"authors":["whitequark <whitequark@whitequark.org>"],"bug-reports":"https://github.com/ocaml-ppx/ppx_deriving_yojson/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],{"options":[{"id":"with-test"}],"val":["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]}],"depends":[{"options":[{"op":"geq","val":["4.05.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["1.0"]}],"val":"dune"},{"options":[{"op":"and","val":[{"op":"geq","val":["1.6.0"]},{"op":"lt","val":["2.0.0"]}]}],"val":"yojson"},"result",{"options":[{"op":"geq","val":["5.1"]}],"val":"ppx_deriving"},{"options":[{"op":"geq","val":["0.14.0"]}],"val":"ppxlib"},{"options":[{"op":"and","val":[{"id":"with-test"},{"op":"geq","val":["2.0.0"]}]}],"val":"ounit"}],"description":"\nppx_deriving_yojson is a ppx_deriving plugin that provides\na JSON codec generator.\n","dev-repo":"git+https://github.com/ocaml-ppx/ppx_deriving_yojson.git","files-contents":{},"homepage":"https://github.com/ocaml-ppx/ppx_deriving_yojson","isLocal":false,"license":"MIT","maintainer":"whitequark <whitequark@whitequark.org>","name":"ppx_deriving_yojson","opam-version":"2.0","synopsis":"JSON codec generator for OCaml","tags":["syntax","json"],"url":{"checksum":["sha256=712ee9207c70dd144e72cd689bee2d2beb120b804e77c74ec6f7b843a88944e6","sha512=d8c828902b8441f73e08fc03e2173ce81a09cccfe091471fbcffe098b2272739b98a05e8308016da3efeb3d4d1abd7d941bfaac42c85961ea40915ddce526577"],"src":"https://github.com/ocaml-ppx/ppx_deriving_yojson/releases/download/v3.6.1/ppx_deriving_yojson-v3.6.1.tbz"},"version":"3.6.1","x-commit-hash":"d0abe462de8bab52d763eeafd751e8ea1ba211ac"},"ppx_import":{"authors":["whitequark <whitequark@whitequark.org>"],"bug-reports":"https://github.com/ocaml-ppx/ppx_import/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],{"options":[{"id":"with-test"}],"val":["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]}],"depends":[{"options":[{"op":"geq","val":["4.05.0"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["1.11.0"]}],"val":"dune"},{"options":[{"op":"geq","val":["0.24.0"]}],"val":"ppxlib"},{"options":[{"id":"with-test"}],"val":"ounit"},{"options":[{"op":"and","val":[{"id":"with-test"},{"op":"geq","val":["4.2.1"]}]}],"val":"ppx_deriving"},{"options":[{"op":"and","val":[{"id":"with-test"},{"op":"geq","val":["v0.13.0"]}]}],"val":"ppx_sexp_conv"}],"dev-repo":"git+https://github.com/ocaml-ppx/ppx_import.git","doc":"https://ocaml-ppx.github.io/ppx_import/","files-contents":{},"homepage":"https://github.com/ocaml-ppx/ppx_import","isLocal":false,"license":"MIT","maintainer":"whitequark <whitequark@whitequark.org>","name":"ppx_import","opam-version":"2.0","synopsis":"A syntax extension for importing declarations from interface files","tags":["syntax"],"url":{"checksum":["sha256=d1b498e2ee380ecf385cf21b713e55b78006ff83e4cc528c97d08318567221d2","sha512=cb1b0a70a220d337c8663c2524f12a2bc9a473439d36ad79463230d0faee481f088fe60ceab7fe92078efbe28a68ad4388b46a6922108470481640ec59b1250a"],"src":"https://github.com/ocaml-ppx/ppx_import/releases/download/1.9.1/ppx_import-1.9.1.tbz"},"version":"1.9.1","x-commit-hash":"44c79bd97b7c8d901914baa7562174371ff5357d"},"ppx_sexp_conv":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/ppx_sexp_conv/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.04.2"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"base"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"sexplib0"},{"options":[{"op":"geq","val":["2.0.0"]}],"val":"dune"},{"options":[{"op":"geq","val":["0.22.0"]}],"val":"ppxlib"}],"description":"\nPart of the Jane Street's PPX rewriters collection.\n","dev-repo":"git+https://github.com/janestreet/ppx_sexp_conv.git","doc":"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_sexp_conv/index.html","files-contents":{},"homepage":"https://github.com/janestreet/ppx_sexp_conv","isLocal":false,"license":"MIT","maintainer":"Jane Street developers","name":"ppx_sexp_conv","opam-version":"2.0","synopsis":"[@@deriving] plugin to generate S-expression conversion functions","url":{"checksum":"md5=25caf01245e0113e035ccefe275f85d9","src":"https://github.com/janestreet/ppx_sexp_conv/archive/v0.14.3.tar.gz"},"version":"v0.14.3"},"ppxlib":{"authors":["Jane Street Group, LLC <opensource@janestreet.com>"],"bug-reports":"https://github.com/ocaml-ppx/ppxlib/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"},"@install",{"options":[{"id":"with-test"}],"val":"@runtest"},{"options":[{"id":"with-doc"}],"val":"@doc"}]],"conflicts":[{"options":[{"op":"lt","val":["2.0.0"]}],"val":"ocaml-migrate-parsetree"},"base-effects"],"depends":[{"options":[{"op":"geq","val":["2.7"]}],"val":"dune"},{"options":[{"op":"and","val":[{"op":"geq","val":["4.04.1"]},{"op":"lt","val":["4.15"]}]}],"val":"ocaml"},{"options":[{"op":"geq","val":["v0.11.0"]}],"val":"ocaml-compiler-libs"},{"options":[{"op":"geq","val":["1.0"]}],"val":"ppx_derivers"},{"options":[{"op":"geq","val":["v0.12"]}],"val":"sexplib0"},"stdlib-shims",{"options":[{"id":"with-test"}],"val":"ocamlfind"},{"options":[{"op":"and","val":[{"id":"with-test"},{"op":"geq","val":["1.9.0"]}]}],"val":"re"},{"options":[{"op":"and","val":[{"id":"with-test"},{"op":"geq","val":["v0.12.1"]}]}],"val":"cinaps"},{"options":[{"id":"with-test"}],"val":"base"},{"options":[{"id":"with-test"}],"val":"stdio"},{"options":[{"id":"with-doc"}],"val":"odoc"}],"description":"\nPpxlib is the standard library for ppx rewriters and other programs\nthat manipulate the in-memory reprensation of OCaml programs, a.k.a\nthe \"Parsetree\".\n\nIt also comes bundled with two ppx rewriters that are commonly used to\nwrite tools that manipulate and/or generate Parsetree values;\n`ppxlib.metaquot` which allows to construct Parsetree values using the\nOCaml syntax directly and `ppxlib.traverse` which provides various\nways of automatically traversing values of a given type, in particular\nallowing to inject a complex structured value into generated code.\n","dev-repo":"git+https://github.com/ocaml-ppx/ppxlib.git","doc":"https://ocaml-ppx.github.io/ppxlib/","files-contents":{},"homepage":"https://github.com/ocaml-ppx/ppxlib","isLocal":false,"license":"MIT","maintainer":["opensource@janestreet.com"],"name":"ppxlib","opam-version":"2.0","synopsis":"Standard library for ppx rewriters","url":{"checksum":["sha256=7766027c2ecd0f5b3b460e9212a70709c6744278113eb91f317c56c41e7a90c8","sha512=726e48899c43f8bee1935618827e68b2953753a62868e424a2dadf2e156cc60794abacea658686a8a160eccde0f75b95b98daacf2b9242b4f86a92798d47b597"],"src":"https://github.com/ocaml-ppx/ppxlib/releases/download/0.24.0/ppxlib-0.24.0.tbz"},"version":"0.24.0","x-commit-hash":"3d858b04613833fec7e2b5f5be25d45bfd354649"},"result":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/result/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":["ocaml",{"options":[{"op":"geq","val":["1.0"]}],"val":"dune"}],"description":"\nProjects that want to use the new result type defined in OCaml >= 4.03\nwhile staying compatible with older version of OCaml should use the\nResult module defined in this library.","dev-repo":"git+https://github.com/janestreet/result.git","files-contents":{},"homepage":"https://github.com/janestreet/result","isLocal":false,"license":"BSD-3-Clause","maintainer":"Jane Street developers","name":"result","opam-version":"2.0","synopsis":"Compatibility Result module","url":{"checksum":"md5=1b82dec78849680b49ae9a8a365b831b","src":"https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz"},"version":"1.5"},"seq":{"authors":" ","bug-reports":"https://caml.inria.fr/mantis/main_page.php","depends":[{"options":[{"op":"geq","val":["4.07.0"]}],"val":"ocaml"}],"dev-repo":"git+https://github.com/ocaml/ocaml.git","extra-files":[["seq.install","md5=026b31e1df290373198373d5aaa26e42"],["META.seq","md5=b33c8a1a6c7ed797816ce27df4855107"]],"files-contents":{"META.seq":"name=\"seq\"\nversion=\"[distributed with OCaml 4.07 or above]\"\ndescription=\"dummy backward-compatibility package for iterators\"\nrequires=\"\"\n","seq.install":"lib:[\n  \"META.seq\" {\"META\"}\n]\n"},"homepage":" ","isLocal":false,"maintainer":" ","name":"seq","opam-version":"2.0","synopsis":"Compatibility package for OCaml's standard iterator type starting from 4.07.","version":"base"},"sexplib":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/sexplib/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.04.2"]}],"val":"ocaml"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"parsexp"},{"options":[{"op":"and","val":[{"op":"geq","val":["v0.14"]},{"op":"lt","val":["v0.15"]}]}],"val":"sexplib0"},{"options":[{"op":"geq","val":["2.0.0"]}],"val":"dune"},"num"],"description":"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\n","dev-repo":"git+https://github.com/janestreet/sexplib.git","doc":"https://ocaml.janestreet.com/ocaml-core/latest/doc/sexplib/index.html","files-contents":{},"homepage":"https://github.com/janestreet/sexplib","isLocal":false,"license":"MIT","maintainer":"Jane Street developers","name":"sexplib","opam-version":"2.0","synopsis":"Library for serializing OCaml values to and from S-expressions","url":{"checksum":"md5=6e230eae22face46cb8645e53e351067","src":"https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib-v0.14.0.tar.gz"},"version":"v0.14.0"},"sexplib0":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/sexplib0/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.04.2"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["2.0.0"]}],"val":"dune"}],"description":"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\n","dev-repo":"git+https://github.com/janestreet/sexplib0.git","doc":"https://ocaml.janestreet.com/ocaml-core/latest/doc/sexplib0/index.html","files-contents":{},"homepage":"https://github.com/janestreet/sexplib0","isLocal":false,"license":"MIT","maintainer":"Jane Street developers","name":"sexplib0","opam-version":"2.0","synopsis":"Library containing the definition of S-expressions and some base converters","url":{"checksum":"md5=37aff0af8f8f6f759249475684aebdc4","src":"https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz"},"version":"v0.14.0"},"stdlib-shims":{"authors":"The stdlib-shims programmers","bug-reports":"https://github.com/ocaml/stdlib-shims/issues","build":["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}],"depends":["dune",{"options":[{"op":"geq","val":["4.02.3"]}],"val":"ocaml"}],"description":"\nBackport some of the new stdlib features to older compiler,\nsuch as the Stdlib module.\n\nThis allows projects that require compatibility with older compiler to\nuse these new features in their code.\n","dev-repo":"git+https://github.com/ocaml/stdlib-shims.git","doc":"https://ocaml.github.io/stdlib-shims/","files-contents":{},"homepage":"https://github.com/ocaml/stdlib-shims","isLocal":false,"license":["typeof OCaml system"],"maintainer":"The stdlib-shims programmers","name":"stdlib-shims","opam-version":"2.0","synopsis":"Backport some of the new stdlib features to older compiler","tags":["stdlib","compatibility","org:ocaml"],"url":{"checksum":["sha256=babf72d3917b86f707885f0c5528e36c63fccb698f4b46cf2bab5c7ccdd6d84a","sha512=1151d7edc8923516e9a36995a3f8938d323aaade759ad349ed15d6d8501db61ffbe63277e97c4d86149cf371306ac23df0f581ec7e02611f58335126e1870980"],"src":"https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz"},"version":"0.3.0","x-commit-hash":"fb6815e5d745f07fd567c11671149de6ef2e74c8"},"uchar":{"authors":["Daniel Bünzli <daniel.buenzl i@erratique.ch>"],"bug-reports":"https://github.com/ocaml/uchar/issues","build":[["ocaml","pkg/git.ml"],["ocaml","pkg/build.ml","native=%{ocaml:native}%","native-dynlink=%{ocaml:native-dynlink}%"]],"depends":[{"options":[{"op":"geq","val":["3.12.0"]}],"val":"ocaml"},{"options":[{"id":"build"}],"val":"ocamlbuild"}],"description":"\nThe `uchar` package provides a compatibility library for the\n[`Uchar`][1] module introduced in OCaml 4.03.\n\nThe `uchar` package is distributed under the license of the OCaml\ncompiler. See [LICENSE](LICENSE) for details.\n\n[1]: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Uchar.html","dev-repo":"git+https://github.com/ocaml/uchar.git","doc":"https://ocaml.github.io/uchar/","files-contents":{},"homepage":"http://ocaml.org","isLocal":false,"license":"typeof OCaml system","maintainer":"Daniel Bünzli <daniel.buenzl i@erratique.ch>","name":"uchar","opam-version":"2.0","synopsis":"Compatibility library for OCaml's Uchar module","tags":["text","character","unicode","compatibility","org:ocaml.org"],"url":{"checksum":"md5=c9ba2c738d264c420c642f7bb1cf4a36","src":"https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz"},"version":"0.0.2"},"yojson":{"authors":["Martin Jambon"],"bug-reports":"https://github.com/ocaml-community/yojson/issues","build":[{"options":[{"id":"dev"}],"val":["dune","subst"]},["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.02.3"]}],"val":"ocaml"},"dune",{"options":[{"id":"build"}],"val":"cppo"},"easy-format",{"options":[{"op":"geq","val":["1.2.0"]}],"val":"biniou"},{"options":[{"op":"and","val":[{"id":"with-test"},{"op":"geq","val":["0.8.5"]}]}],"val":"alcotest"}],"description":"\nYojson is an optimized parsing and printing library for the JSON format.\n\nIt addresses a few shortcomings of json-wheel including 2x speedup,\npolymorphic variants and optional syntax for tuples and variants.\n\nydump is a pretty-printing command-line program provided with the\nyojson package.\n\nThe program atdgen can be used to derive OCaml-JSON serializers and\ndeserializers from type definitions.","dev-repo":"git+https://github.com/ocaml-community/yojson.git","doc":"https://ocaml-community.github.io/yojson/","files-contents":{},"homepage":"https://github.com/ocaml-community/yojson","isLocal":false,"maintainer":"martin@mjambon.com","name":"yojson","opam-version":"2.0","run-test":[["dune","runtest","-p",{"id":"name"},"-j",{"id":"jobs"}]],"synopsis":"Yojson is an optimized parsing and printing library for the JSON format","url":{"checksum":"md5=b89d39ca3f8c532abe5f547ad3b8f84d","src":"https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz"},"version":"1.7.0"},"zarith":{"authors":["Antoine Miné","Xavier Leroy","Pascal Cuoq"],"bug-reports":"https://github.com/ocaml/Zarith/issues","build":[{"options":[{"op":"and","val":[{"op":"and","val":[{"op":"neq","val":[{"id":"os"},"openbsd"]},{"op":"neq","val":[{"id":"os"},"freebsd"]}]},{"op":"neq","val":[{"id":"os"},"macos"]}]}],"val":["./configure"]},{"options":[{"op":"or","val":[{"op":"eq","val":[{"id":"os"},"openbsd"]},{"op":"eq","val":[{"id":"os"},"freebsd"]}]}],"val":["sh","-exc","LDFLAGS=\"$LDFLAGS -L/usr/local/lib\" CFLAGS=\"$CFLAGS -I/usr/local/include\" ./configure"]},{"options":[{"op":"and","val":[{"op":"eq","val":[{"id":"os"},"macos"]},{"op":"neq","val":[{"id":"os-distribution"},"homebrew"]}]}],"val":["sh","-exc","LDFLAGS=\"$LDFLAGS -L/opt/local/lib -L/usr/local/lib\" CFLAGS=\"$CFLAGS -I/opt/local/include -I/usr/local/include\" ./configure"]},{"options":[{"op":"and","val":[{"op":"and","val":[{"op":"eq","val":[{"id":"os"},"macos"]},{"op":"eq","val":[{"id":"os-distribution"},"homebrew"]}]},{"op":"eq","val":[{"id":"arch"},"x86_64"]}]}],"val":["sh","-exc","LDFLAGS=\"$LDFLAGS -L/opt/local/lib -L/usr/local/lib\" CFLAGS=\"$CFLAGS -I/opt/local/include -I/usr/local/include\" ./configure"]},{"options":[{"op":"and","val":[{"op":"and","val":[{"op":"eq","val":[{"id":"os"},"macos"]},{"op":"eq","val":[{"id":"os-distribution"},"homebrew"]}]},{"op":"eq","val":[{"id":"arch"},"arm64"]}]}],"val":["sh","-exc","LDFLAGS=\"$LDFLAGS -L/opt/homebrew/lib\" CFLAGS=\"$CFLAGS -I/opt/homebrew/include\" ./configure"]},[{"id":"make"}]],"depends":[{"options":[{"op":"geq","val":["4.04.0"]}],"val":"ocaml"},"ocamlfind","conf-gmp"],"description":"\nThe Zarith library implements arithmetic and logical operations over\narbitrary-precision integers. It uses GMP to efficiently implement\narithmetic over big integers. Small integers are represented as Caml\nunboxed integers, for speed and space economy.","dev-repo":"git+https://github.com/ocaml/Zarith.git","files-contents":{},"homepage":"https://github.com/ocaml/Zarith","install":[[{"id":"make"},"install"]],"isLocal":false,"maintainer":"Xavier Leroy <xavier.leroy@inria.fr>","name":"zarith","opam-version":"2.0","synopsis":"Implements arithmetic and logical operations over arbitrary-precision integers","url":{"checksum":["md5=bf368f3d9e20b6b446d54681afc05a04","sha512=8075573ae65579a2606b37dd1b213032a07d220d28c733f9288ae80d36f8a2cc4d91632806df2503c130ea9658dc207ee3a64347c21aa53969050a208f5b2bb4"],"src":"https://github.com/ocaml/Zarith/archive/release-1.12.tar.gz"},"version":"1.12"},"zarith_stubs_js":{"authors":["Jane Street Group, LLC"],"bug-reports":"https://github.com/janestreet/zarith_stubs_js/issues","build":[["dune","build","-p",{"id":"name"},"-j",{"id":"jobs"}]],"depends":[{"options":[{"op":"geq","val":["4.04.2"]}],"val":"ocaml"},{"options":[{"op":"geq","val":["2.0.0"]}],"val":"dune"}],"description":"\nThis library contains no ocaml code, but instead implements\nall of the Zarith C stubs in Javascript for use in Js_of_ocaml\n","dev-repo":"git+https://github.com/janestreet/zarith_stubs_js.git","doc":"https://ocaml.janestreet.com/ocaml-core/latest/doc/zarith_stubs_js/index.html","files-contents":{},"homepage":"https://github.com/janestreet/zarith_stubs_js","isLocal":false,"license":"MIT","maintainer":"Jane Street developers","name":"zarith_stubs_js","opam-version":"2.0","synopsis":"Javascripts stubs for the Zarith library","url":{"checksum":"md5=948430731b9e3d0890cfc930b6829c37","src":"https://github.com/janestreet/zarith_stubs_js/archive/refs/tags/v0.14.1.tar.gz"},"version":"v0.14.1"}}